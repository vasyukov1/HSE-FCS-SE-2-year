{
    "swagger": "2.0",
    "info": {
        "description": "Gateway is for distributing requests between microservices",
        "title": "API Gateway",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/accounts/create": {
            "post": {
                "description": "Proxies account creation request to payment-service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Proxy account creation",
                "responses": {
                    "201": {
                        "description": "account_id",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Create account failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/accounts/top_up": {
            "post": {
                "description": "Increases the balance of the specified account by the given amount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Top up account balance",
                "parameters": [
                    {
                        "description": "Account ID and amount to top up",
                        "name": "top_up_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.TopUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.BalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Top up failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/accounts/{account_id}/balance": {
            "get": {
                "description": "Return current balance for the given account ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account UUID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.BalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Missing 'account_id' parameter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Get balance failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "Returns a list of all orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "List all orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.OrderResponse"
                            }
                        }
                    },
                    "502": {
                        "description": "Get orders failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders/create": {
            "post": {
                "description": "Creates an order for a user with given amount and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create new order",
                "parameters": [
                    {
                        "description": "Order payload",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload or parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Create order failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders/{order_id}/status": {
            "get": {
                "description": "Returns status for the given order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order UUID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.StatusResponse"
                        }
                    },
                    "502": {
                        "description": "Get order status failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.BalanceResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                }
            }
        },
        "domain.OrderRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.OrderResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.StatusResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "domain.TopUpRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                }
            }
        }
    }
}