= ВВЕДЕНИЕ
== Наименование программы

#h(2em) Наименование программы -- "Сервис для стриминга и селфхостинга музыки. iOS-приложение".\
#h(2em) Наименование программы на английском языке -- "Service for Self-hosting and Streaming Music. iOS app".

== Краткая характеристика области применения программы

#h(2em) "Сервис для стриминга и селфхостинга музыки" -- это приложение для прослушивания и удаленного хранения музыки. Разрабатываемый продукт позволит в одном месте хранить музыкальные файлы, собирать собственные плейлисты, сортировать треки по названиям, исполнителям и альбомам.

#h(2em) В настоящее время большинство людей прибегает к использованию стриминговых сервисов для прослушивания музыки. У этого способа потребления контента есть свои недостатки:\
1. Пользователь в действительности не владеет контентом, который прослушивает, в отличие
от покупателей жестких носителей, таких, как винил, CD;\
2. У пользователя может не быть постоянного доступа к медиа из-за сбоев на стороне стримингового сервиса, удаления музыкальной композиции с площадки исполнителем и пр.

#h(2em) Проект нацелен на разработку сервиса, который позволит пользователю управлять своей медиатекой на домашнем сервере (в облаке), а также прослушивать музыкальные произведения (файлы) с мобильных устройств.

#h(2em) В настоящее время не существует программной системы, позволяющей полноценно и эффективно решать указанные выше проблемы.

= ОСНОВАНИЯ ДЛЯ РАЗРАБОТКИ
== Документ(ы), на основании которого(ых) ведется разработка

#h(2em) Разработка ведётся на основании учебного плана подготовки бакалавров по направлению 09.03.04 «Программная инженерия» и утвержденной академическим руководителем программы темы курсового проекта.

== Наименование темы разработки

#h(2em) Наименование темы разработки: "Сервис для стриминга и селфхостинга музыки. iOS-приложение".\
#h(2em) Наименование темы разработки на
английском языке -- "Sеrviсе for Self-hosting апd Streaming Music. iOS app"

= НАЗНАЧЕНИЕ РАЗРАБОТКИ
== Функциональное назначение

#h(2em) Разрабатываемая программа предназначена для удаленного хранения и упралвения музыкальной библиотекой. Продукт должен предоставлять следующие функции:\
\- Добавление композиций в библиотеку;\
\- Удаление композиций из библиотеки;\
\- Проигрывание композиции из хранилища;\
\- Создание плейлистов;\
\- Фильтрация композиций;\
\- Сортировка композиций по названиям, альбомам, исполнителям;\
\- Поиск по названию композиции, названию альбома, исполнителю;\

== Эксплуатационное назначение

#h(2em) Основными конечными потребителями разрабатываемого приложения являются люди,
которые предпочитают хранить музыку на своём устройстве, стремятся к безопасности и удобству прослушивания треков.

#h(2em) Для корректного использования программы пользователю необходим смартфон с
операционной системой iOS и доступ к Интернету.

= ТРЕБОВАНИЯ К ПРОГРАММЕ
== Требования к функциональным характеристикам
=== Требования к составу выполняемых функций

#h(2em)iOS-приложение должно реализовывать следующие функции:

1. Управление музыкальными композициями
#h(2em) 1.1. Добавление новых композиций\
#h(4em) - Указание названия композиции.\
#h(4em) - Указание исполнителя.\
#h(4em) - Указание альбома.\
#h(4em) - Возможность загрузить фото трека.

#h(2em) 1.2. Удаление композиций

#h(2em) 1.3. Редактирование композиций\
#h(4em) - Изменение названия композиции.\
#h(4em) - Изменение исполнителя или альбома.\
#h(4em) - Обновление фото трека.

#h(2em) 1.4. Просмотр информации о композициях\
#h(4em) - Отображение основной информации о треке: название, исполнитель, альбом, фото.\
#h(4em) - Текст песни, если загружен.

#h(2em) 1.5. Удаление исполнителя ведёт к удалению всех его треков

2. Управление плейлистами
#h(2em) 2.1. Создание плейлистов\
#h(4em) - Возможность указать название плейлиста.\
#h(4em) - Возможность добавить треки в плейлист.\
#h(4em) - Возможность добавить обложку плейлиста.

#h(2em) 2.2. Редактирование плейлистов\
#h(4em) - Изменение названия плейлиста.\
#h(4em) - Добавление или удаление треков из плейлиста.\
#h(4em) - Измнение обложки плейлиста.

#h(2em) 2.3. Удаление плейлистов

3. Поиск и фильтрация
#h(2em) 3.1. Фильтрация музыкальной библиотеки\
#h(4em) - Фильтрация композиций по альбомам.\
#h(4em) - Фильтрация треков по исполнителям.

#h(2em) 3.2. Поиск музыки (как среди скаченных, так и среди всего сервера)\
#h(4em) - Поиск треков по названию.\
#h(4em) - Поиск треков по исполнителю.\
#h(4em) - Поиск альбомов или плейлистов.

4. Воспроизведение музыки
#h(2em) 4.1. Прослушивание треков.

#h(2em) 4.2. Смешивание треков - прослушивание треков в случайном порядке. 

#h(2em) 4.3. Управление очередью воспроизведения\
#h(4em) - Добавление трека в текущую очередь воспроизведения.\
#h(4em) - Добавление трека в список следующих треков.

5. Навигация и общие функции
#h(2em) 5.1. Интерактивная навигация по музыкальной библиотеке.

#h(2em) 5.2. Переход между разделами: "Треки", "Альбомы", "Плейлисты", "Поиск".

#h(2em) 5.3. Автоматическое сохранение изменений, связанных с добавлением, удалением и редактированием музыкального контента.

6. Настройки приложения
#h(2em) 6.1. Редактирование профиля пользователя\
#h(4em) - Возможность изменить имя пользователя.\
#h(4em) - Возможность изменить адрес электронной почты.

#h(2em) 6.2. Управление доступом\
#h(4em) - Вход и выход из аккаунта.\
#h(4em) - Возможность смены пароля.

#h(2em) 6.3. Справка и поддержка\
#h(4em) - Доступ к разделу "Часто задаваемые вопросы".\
#h(4em) - Возможность отправить запрос в техническую поддержку.\
#h(4em) - Отображение контактных данных разработчика.


7. Работа в режиме online
#h(2em) 7.1. Вся информация об исполнителях, альбомах, плейлистах и треках запрашивается с сервера\
#h(2em) 7.2. Все взаимодействия, касающиеся изменения и создания плейлистов, передаются на сервер

8. Работа в режиме offline
#h(2em) 8.1. Вся информация об исполнителях, альбомах, плейлистах и треках доступна из сохраненной информации\
#h(2em) 8.2. Вся информация об изменениях и создании плейлистов сохраняется на устройстве, до перехода в онлайн режим\
#h(2em) 8.3. Предоставление информации об:\
#h(4em) - исполнителях, треки которых были скачаны на устройство\
#h(4em) - треках, скачанных на устройство (в списке треков будут находиться только треки, скачанные на устройство)\
#h(4em) - альбомах, треки из которых были скачаны на устройство\
#h(4em) -  плейлистах, треки из которых были скачаны на устройство\
#h(2em) 8.4. воспроизведение сохраненных на устройство аудио файлов

9. Подключение к личному серверу по http-протоколу
#h(2em) 9.1. Авторизация пользователя для подключения к личному серверу селфхостинга по логину и паролю.

=== Требования к организации входных данных

#h(2em)Входные данные представляют собой действия, совершаемые пользователем в приложении.

#h(2em) 1. Основное\
#h(4em) 1.1. Каждое действие пользователя должно быть обработано приложением в соответствии с его типом и контекстом использования.

#h(2em) 2. Нажатия на виртуальные кнопки\
#h(4em) 2.1. Приложение должно реагировать на нажатия пользователя на виртуальные кнопки, отображаемые на экране устройства.\
#h(4em) 2.2. Каждая кнопка должна иметь определенную функциональность, которая должна быть корректно реализована в соответствии с функциональными требованиями к приложению, описанными в пункте 4.1.1.

#h(2em) 3. Листание текста\
#h(4em) 3.1. Приложение должно поддерживать возможность листания текста на экране устройства, если это необходимо для просмотра больших объемов информации или элементов интерфейса, таких как списки или карточки.

#h(2em) 4. Ввод текста, чисел, добавление фотографий\
#h(4em) 4.1. Ввод текста и чисел должен осуществляться с помощью виртуальной клавиатуры.\
#h(4em) 4.2. Добавление фотографий должно быть доступно из галереи устройства.

=== Требования к организации выходных данных

#h(2em) Выходные данные предоставляются пользователю на экране мобильного приложения. Мобильное приложение получает данные от сервера в результате HTTP запросов и преобразует их для отображения пользователю.

=== Требования к временным характеристикам

#h(2em) Требования к временным характеристикам программы не предъявляются.

=== Требования к интерфейсу

#h(2em) Программа реализует простой, понятный и эффективный интерфейс с пользователем. Интерфейс должен корректно отображаться на дисплеях смартфонов с любым разрешением
экрана.

#h(2em) 1. Интерфейс должен воспроизводить функционал из п. 4.1.1.

#h(2em) 2. Внизу каждой страницы расположена панель, на которой расположены кнопки для перехода в разделы "Главная", "Поиск", "Аккаунт"

#h(2em) 3. Окно авторизации и входа\
#h(4em) 3.1. Поле для ввода почты\
#h(4em) 3.2. Поле для ввода пароля\
#h(4em) 3.3. Кнопка "Войти"\
#h(4em) 3.4. Кнопка "Забыли пароль?". При переходе на нее:\
#h(6em) 3.4.1. Поле для ввода почты\
#h(6em) 3.4.2. Кнопка "Восстановить пароль"\
#h(4em) 3.5. Кнопка "Зарегистрироваться". При переходе на нее:\
#h(6em) 3.4.1. Поле для ввода почты\
#h(6em) 3.4.2. Поле для ввода пароля\
#h(6em) 3.4.3. Кнопка "Зарегистрироваться"\

#h(2em) 4. Раздел "Главная"\
#h(4em) 4.1. Название приложения\
#h(4em) 4.2. Кнопка воспроизведения композиций с цветовой визуализацией\
#h(4em) 4.3. Кнопка перехода к разделу "Моя музыка"\
#h(4em) 4.4. Кнопка "Добавить музыку"\
#h(4em) 4.5. Кнопка "Создать плейлист"\
#h(4em) 4.6. Списки композиций, альбомов, артистов, которые есть в музыклаьной библиотеке пользователя, кнопки для перехода ко всем композициям, альбомам и артистам пользователя.

#h(2em) 5. Раздел "Моя музыка"\
#h(4em) 5.1. Поисковая строка.\
#h(4em) 5.2. Кнопка для фильтра.\
#h(4em) 5.3. Кнопка сортировки\
#h(4em) 5.2. Кнопки для выбора группы: композиции, альбомы, плейлисты, исполнители.\
#h(4em) 5.3. Список всех композиций, альбомов, плейлистов, исполнителей в зависимости от текущего выбора группы.

#h(2em) 6. Раздел "Аккаунт"\
#h(4em) 6.1. Кнопка для перехода в раздел "Настройки"\
#h(4em) 6.2. Фото аккаунта, имя пользователя, информация о количестве композиций\
#h(4em) 6.3. Топ-5 наиболее часто проигрываемые композиции за последние 30 дней. Топ-3 исполнителя, чьи композиции воспроизводились наиболее часто за последние 30 дней. При нажатии на заголовок "Топ треков" открывается раздел со статистикой композиций (название, исполнитель, длительность композиции), аналогично, при нажатии на "Топ артистов" открывается раздел со статистикой исполнителей.\

#h(2em) 7. Раздел "Настройки"\
#h(4em) 7.1. Профиль пользователя\
#h(6em) - Отображение электронной почты\
#h(6em) - Редактирование имени, фото пользователя \
#h(4em) 7.2. Обратная связь и поддержка\
#h(4em) 7.3. Контактные данные разработчика\
#h(4em) 7.4. Ссылка на раздел "Часто задаваемые вопросы"\
#h(4em) 7.5. Кнопка "Выйти из аккаунта"\

#h(2em) 8. "Плеер" -- экран воспроизведения композиций\
#h(4em) 8.1. Кнопки "Предыдущий трек", "Остановить/продолжить трек", "Следующий трек"\
#h(4em) 8.2. Прогресс-бар, отображающий на каком моменте проигрывается композиция\
#h(4em) 8.3. Обложка композиции\
#h(4em) 8.4. Название трека и имя исполнителя\
#h(4em) 8.5. Кнопки для перемешивания следующих треков и повторного воспроизведения текущей композиции

#h(2em) 9. Раздел "Исполнитель"\
#h(4em) 9.1. Фото исполнителя, имя исполнителя и информаци о количестве его композиций\
#h(4em) 9.2. Композиции исполнителя и его альбомы\
#h(4em) 9.3. Кнопка для редактирования исполнителя: смена имени, фото, добавление, удаление композиции, альбома.

#h(2em) 10. Раздел "Поиск" (для поиска среди всех треков, загруженных на сервер)\
#h(4em) 10.1. Поисковая строка\
#h(4em) 10.2. Самые популярные по прослушиванию треки среди всех пользователей\
#h(4em) 10.3. Самые популярные по прослушиванию исполнители среди всех пользователей

#h(2em) 11. Экран плейлиста\
#h(4em) 11.1. Обложка плейлиста\
#h(4em) 11.2. Название плейлиста\
#h(4em) 11.3. Кнопка воспроизведения плейлиста\
#h(4em) 11.4. Список треков плейлиста\
#h(4em) 11.5. Кнопка "Добавить трек в плейлист"\
#h(4em) 11.6. Кнопка "Редактировать плейлист"\

#h(2em) 12. Экран альбома\
#h(4em) 12.1. Обложка альбома\
#h(4em) 12.2. Название альбома\
#h(4em) 12.3. Кнопка воспроизведения альбома\
#h(4em) 12.4. Список треков альбома\

== Требования к надёжности

#h(2em) Приложение не должно аварийно завершаться при любом наборе входных данных. Программа не должна давать сбой при некорректных действиях пользователя.

== Условия эксплуатации
=== Климатические условия эксплуатации

#h(2em) Климатические условия эксплуатации, при которых должна обеспечиваться корректная работа программы, должны соответствовать требованиям, предъявляемым к техническим средствам, реализующим данный программный продукт.

=== Требования к видам обслуживания

#h(2em) На персональном смартфоне, где производится эксплуатация программы, необходимо обеспечить регулярные проверки оборудования и программного обеспечения на наличие сбоев и неполадок, а также обеспечить защиту персонального смартфона от вредоносного воздействия шпионских программ, троянских программ и других видов вредоносного программного обеспечения.

=== Требования к численности и квалификации персонала

#h(2em) Для пользования данным приложением достаточно одного человека. Пользователь должен обладать навыками пользования смартфоном с операционной системой iOS 14.0 и выше, уметь скачивать и устанавливать приложения.
Перед использованием программы он должен быть проинформирован о функционале программы.

== Требования к составу и параметрам технических средств

#h(2em) Для надежной и бесперебойной работы программы требуется следующий состав технических средств:
1. Мобильное устройство с возможностью использования операционной системы iOS 14.0 или выше;
2. 2 Гб оперативной памяти (ОЗУ) или больше;
3. 200 Мб свободного места на внутреннем накопителе или больше;
4. Возможность подключения к сети интернет;

== Требования к информационной и программной совместимости

=== Требования к информационным структурам и методам решения

#h(2em) Требования к информационным структурам и методам решения не предъявляются.

=== Требования к программным средствам, используемым программой

#h(2em) Для корректной работы программы на устройстве должна быть установлена операционная система iOS 14.0 и выше.

=== Требования к исходным кодам и языкам программирования

#h(2em) Исходный код программы должны быть реализован на языке Swift [14] с использованием фреймворка UIKit [15].

=== Требования к защите информации и программы
#h(2em) Требования к защите информации и программ не предъявляются.

== Требования к маркировке и упаковке

#h(2em) Программа распространяется в виде электронного пакета, содержащего программную документацию, приложение (исполняемые файлы и прочие необходимые для работы файлы, в том числе файлы с исходным кодом) и презентацию проекта. Специальных требований к маркировке и упаковке не предъявляется.

== Требования к транспортированию и хранению

#h(2em) Транспортировка программного продукта должна осуществляться без нарушения полноты комплекта, предоставленного разработчиком изначально.\
#h(2em) Хранение продукта осуществляется с помощью репозитория на GitHub.

== Специальные требования

#h(2em) Специальные требования к программе не предъявляются.

= ТРЕБОВАНИЯ К ПРОГРАММНОЙ ДОКУМЕНТАЦИИ
== Состав программной документации

1. "Сервис для стриминга и селфхостинга музыки. iOS-приложение". Техническое задание (ГОСТ 19.201-78 [7]).
2. "Сервис для стриминга и селфхостинга музыки. iOS-приложение". Пояснительная записка (ГОСТ 19.404-79 [10]).
3. "Сервис для стриминга и селфхостинга музыки. iOS-приложение". Программа и методика испытаний (ГОСТ 19.301-79 [8]).
4. "Сервис для стриминга и селфхостинга музыки. iOS-приложение". Текст программы (ГОСТ 19.401-78 [9]).
5. "Сервис для стриминга и селфхостинга музыки. iOS-приложение". Руководство оператора (ГОСТ 19.505-79 [11]).

== Специальные требования к программной документации

#h(2em) Документы к программе должны быть выполнены в соответствии с ГОСТ 19.106-78 [6] и ГОСТами к каждому виду документа (см. п. 5.1.);

#h(2em) Пояснительная записка должна быть загружена в систему Антиплагиат через LMS «НИУ ВШЭ».

#h(2em) Документация и программа сдается в электронном виде в формате .pdf или .docx. в архиве формата .zip или .rar;

#h(2em) За две недели до защиты комиссии все материалы курсового проекта:\
\- программная документация,\
\- программный проект,\
\- исполняемый файл,\
\- отзыв руководителя,\
\- отчет системы Антиплагиат\
должны быть загружены одним или несколькими архивами в проект дисциплины "Курсовой проект" в личном кабинете в информационной образовательной среде SmartLMS НИУ ВШЭ.

= ТЕХНИКО-ЭКОНОМИЧЕСКИЕ ПОКАЗАТЕЛИ
== Предполагаемая потребность

#h(2em) Есть ситуации, когда пользователю необходимо хранить и использовать музыкальные файлы в облаке. Если композиции были удалены с популярных стриминговых сервисов, а хранение музыки локально на устройстве неудобно или невозможно, то пользователь теряет возможность воспроизводить музыку.

#h(2em) Разрабатываемое приложение станет решением для тех, кто хочет сохранять доступ к своим музыкальным композициям и слушать их в любое время, независимо от ограничений стриминговых платформ.

== Целевая аудитория

#h(2em) Программа будет востребована среди людей, которые хотят хранить свою музыкальную библиотеку независимо от стриминговой платформы и иметь постоянный доступ к ней.

== Экономические преимущества разработки по сравнению с отечественными и зарубежными аналогами

#h(2em) Для оценки преимуществ проекта было проведено сравнение функциональных характеристик с аналогами разрабатываемого приложения (ссылки на аналоги даны в приложении "Ссылки на аналоги"). Рассмотрены только бесплатные версии аналогов без подписки. Данные сравнения отображены в таблице 1 и 2.

#let column_names = (
    [Яндекс Музыка],
    [Spotify],
    [ВК\ Музыка],
    [YouTube Music],
    [Apple Music],
    [*Our Project*],
)

#let plus = table.cell(
  fill: green.lighten(60%),
)[+]

#let minus = table.cell(
  fill: red.lighten(60%),
)[-]

#figure(
    caption: [Сравнение функциональных характеристик со стриминговыми сервисами],
    table(
        columns: (6cm,) + (2cm,) * column_names.len(),
        rows: (3cm, 1.5cm),
        align: center + horizon,
        table.header(
            [Функция],
            ..column_names.map(col => rotate(0deg, reflow: true, col))
        ),

        [Скачивание треков\ на устройство],   minus, 
        minus, minus, minus, minus, plus,
        [Нет рекламы], minus, minus, minus, minus, plus, plus,
        [Бесплатное прослушивание\ без ограничений], minus, minus, minus, minus, minus, plus,
        [Возможность использования в России], plus, minus, plus, plus, plus, plus,
        [Добавление своих треков], plus, minus, plus, minus, plus, plus,
        [Редактирование треков], minus, minus, plus, minus, minus, plus,

        [*Итого*], [*2*], [*0*], [*3*], [*1*], [*3*], [*6*],
    )
)

#let column_names2 = (
    [Black Candy],
    [Navidrome],
    [Ampache],
    [mStream],
    [*Our Project*],
)

#figure(
    caption: [Сравнение функциональных характеристик с сервисами для селфхостинга музыки],
    table(
        columns: (6cm,) + (2cm,) * column_names2.len(),
        rows: (3cm, 1.5cm),
        align: center + horizon,
        table.header(
            [Функция],
            ..column_names2.map(col => rotate(0deg, reflow: true, col))
        ),

        [Поодержка нескольких\ пользователей одновременно],   plus, 
        plus, plus, plus, plus,
        [Сортировка треков], minus, plus, plus, plus, plus,
        [Настройка звука], minus, minus, minus, minus, plus,

        [*Итого*], [*1*], [*2*], [*2*], [*2*], [*3*],
    )
)

= СТАДИИ И ЭТАПЫ РАЗРАБОТКИ
== Стадии разработки, этапы и содержание работ

#h(2em) Стадии и этапы разработки были выявлены с учётом ГОСТ 19.102-77 [2].

#let column_names = (
    [*Стадия\ разработки*],
    [*Этап работ*],
    [*Содержание работ*],
    [*Исполнители\ работ*],
    [*Сроки\ выполнения*],
)

#let alex = table.cell(
)[Александр\ Васюков]

Таблица 3 -- Стадии и этапы разработки

#figure(
    table(
        columns: (3cm, auto, 50mm, auto, auto),
        rows: (15mm, auto),
        
        align: center + horizon,
        table.header(..column_names),

        table.cell(
          rowspan: 10,
          align: horizon,
          rotate(0deg, reflow: true)[
            Техническое задание
          ],
        ),

        table.cell(
          rowspan: 2,
          align: horizon,
          rotate(0deg, reflow: true)[
            Обоснование необходимости разработки
          ],
        ),
        [Постановка задачи], alex, [13.11.24],
        [Сбор исходных теоретических материалов], 
        alex, [13.11.24],

        table.cell(
          rowspan: 4,
          align: horizon,
          rotate(0deg, reflow: true)[
            Научно-исследовательский этап разработки
          ],
        ),
        [Определение\ структуры входных и выходных данных], alex, [15.11.24 --\ 03.12.24],
        [Предварительный выбор методов решения задач], alex, [15.11.24 --\ 03.12.24],
        [Определение требований к техническим и программным средствам], alex, [15.11.24 --\ 03.12.24],
        [Обоснование возможности решения поставленной задачи], alex, [15.11.24 --\ 03.12.24],

        table.cell(
          rowspan: 4,
          align: horizon,
          rotate(0deg, reflow: true)[
            Разработка и утверждение технического задания
          ],
        ),
        [Определение требований к программному продукту], alex, [15.11.24 --\ 03.12.24],
        [Выбор языков программирования], alex, [15.11.24 --\ 03.12.24],
        [Разработка и согласование технического задания с научным руководителем], alex, [15.11.24 --\ 03.12.24],
        [Загрузка согласованного технического задания в SmartLMS], alex, [04.12.24],
    )
)

Продолжение таблицы 3

#figure(
    table(
        columns: (3cm, auto, 50mm, auto, auto),
        rows: (13mm, auto, 12mm, auto),
        
        align: center + horizon,
        table.header(..column_names),

        table.cell(
          rowspan: 6,
          align: horizon,
          rotate(0deg, reflow: true)[
            Рабочий проект
          ],
        ),

        table.cell(
          rowspan: 2,
          align: horizon,
          rotate(0deg, reflow: true)[
            Разработка программы
          ],
        ),
        [Предварительная разработка структуры программы], alex, [05.12.24 --\ 25.12.24],
        [Программирование и отладка программы], 
        alex, [25.12.24 --\ 31.01.25],

        [Разработка программной документации],
        [Разработка документов в соответствии с требованиями ГОСТ 19 ЕСПД (Единой системы программной документации)], alex, [05.12.24 --\ 31.01.25],

        table.cell(
          rowspan: 3,
          align: horizon,
          rotate(0deg, reflow: true)[
            Испытания программы
          ],
        ),

        [Разработка, согласование и утверждение порядка в методики испытаний], alex, [01.02.25 --\ 10.02.25],
        [Проведение испытаний программы в соответствии с утвержденными порядком и методикой], alex, [10.02.25 --\ 17.02.25],

        [Корректировка программы и программной документации по результатам испытаний], alex, [17.02.25 --\ 28.02.25],

        table.cell(
          rowspan: 2,
          align: horizon,
          [Внедрение],
        ),

        table.cell(
          rowspan: 2,
          align: horizon,
          [Подготовка и передача программы],
        ),

        [Подготовка программы и программной документации для презентации и защиты], alex, [01.03.25 --\ 15.03.25],

        [Представление разработанного программного продукта научному руководителю и получение отзыва], alex, [16.03.25],
    )
)

Продолжение таблицы 3

#figure(
    table(
        columns: (3cm, 43.2mm, 50mm, auto, auto),
        rows: (15mm, auto),
        
        align: center + horizon,
        table.header(..column_names),

        table.cell(
          rowspan: 3,
          align: horizon,
          [],
        ),

        table.cell(
          rowspan: 3,
          align: horizon,
          [],
        ),

        [Загрузка Пояснительной записки в систему Антиплагиат через ЛМС НИУ ВШЭ], alex, [xx.04.25],

        [Загрузка материалов курсового проекта в ЛМС, дисциплина "Курсовой проект, 2 курс, ПИ"], alex, [xx.04.25],
        
        [Защита программного продукта комиссии], alex, [xx.04.25]
    )
)

== Сроки разработки и исполнители

#h(2em) Разработка программного продукта должна быть завершена не позже утверждённого срока сдачи работы.

#h(2em)Исполнитель -- Васюков Александр Владимирович, студент группы БПИ235 факультета компьютерных наук НИУ ВШЭ.

= ПОРЯДОК КОНТРОЛЯ И ПРИЕМКИ

#h(2em) Контроль и приемка разработки осуществляются в соответствии с документом «Программа и методика испытаний» (ГОСТ 19.301–79 [8]).

== Виды испытаний

#h(2em) Производится проверка корректного выполнения программой заложенных в нее функций, т.е. осуществляется функциональное тестирование программы. Также осуществляется визуальная проверка интерфейса программы на соответствие пункту 4.1.5 настоящего технического задания.\
#h(2em) Сроки проведения испытаний указаны в пункте 7 "Стадии и этапы разработки".

== Общие требования к приёмке работы

#h(2em) Прием программы будет утвержден при корректной работе программы в соответствии с пунктом 4.1.1 при различных входных данных, соответствующих условиям в пункте 4.1.2 данного документа и при предоставлении полной документации к продукту, указанной в пункте 5.1, выполненной в соответствии с требованиями, указанными в пункте 5.2 данного технического задания.

#set heading(numbering: none)
= СПИСОК ИСПОЛЬЗУЕМОЙ ЛИТЕРАТУРЫ

1. ГОСТ 19.101-77: Виды программ и программных документов. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
2. ГОСТ 19.102-77: Стадии разработки. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
3. ГОСТ 19.103-77: Обозначения программ и программных документов. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
4. ГОСТ 19.104-78: Основные надписи. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
5. ГОСТ 19.105-78: Общие требования к программным документам. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
6. ГОСТ 19.106-78: Требования к программным документам, выполненным печатным способом. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
7. ГОСТ 19.201-78: Техническое задание. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
8. ГОСТ 19.301-79: Программа и методика испытаний. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
9. ГОСТ 19.401-78: Текст программы. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
10. ГОСТ 19.404-79: Пояснительная записка. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
11. ГОСТ 19.505-79: Руководство оператора. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
12. ГОСТ 19.603-78: Общие правила внесения изменений. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
13. ГОСТ 19.604-78: Правила внесения изменений в программные документы, выполненные печатным способом. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
14. Официальная документация Swift. Электронный ресурс. URL: https://www.swift.org/documentation/ (дата обращения 30.11.24)
15. Официальная документация UIKit. Электронный ресурс. URL: https://developer.apple.com/documentation/uikit/ (дата обращения 30.11.24)

= ПРИЛОЖЕНИЕ. ССЫЛКИ НА АНАЛОГИ

#figure(
  table(
    columns: (70mm, 70mm),
    rows: (10mm, auto),
    align: center + horizon,
    table.header([*Приложение*], [*Ссылка*]),

    [Яндекс Музыка], [https://music.yandex.ru/],
    [Spotify], [https://www.spotify.com/],
    [ВК Музыка], [https://music.vk.com/],
    [YouTube Music], [https://music.youtube.com/],
    [Apple Music], [https://music.apple.com/],
    [Black Candy], [https://github.com/blackcandy-org/blackcandy],
    [Navidrome], [https://www.navidrome.org/],
    [Ampache], [https://ampache.org/],
    [mStream], [https://mstream.io/],

  )
)

#h(2em) Дата обращения: 03.12.24.
