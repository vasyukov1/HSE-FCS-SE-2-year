= ВВЕДЕНИЕ
== Наименование программы

#h(2em) Наименование программы -- "Сервис для стриминга и селфхостинга музыки".\
#h(2em) Наименование программы на английском языке -- "Service for Self-hosting and Streaming Music.".

== Краткая характеристика области применения программы

#h(2em) "Сервис для стриминга и селфхостинга музыки" -- это приложение для прослушивания и удаленного хранения музыки. Разрабатываемый продукт позволит в одном месте хранить музыкальные файлы, собирать собственные плейлисты, сортировать треки по названиям, исполнителям и альбомам.

#h(2em) В настоящее время большинство людей прибегает к использованию стриминговых сервисов для прослушивания музыки. У этого способа потребления контента есть свои недостатки:\
1. Пользователь в действительности не владеет контентом, который прослушивает, в отличие
от покупателей жестких носителей, таких, как винил, CD;\
2. У пользователя может не быть постоянного доступа к медиа из-за сбоев на стороне стримингового сервиса, удаления музыкальной композиции с площадки исполнителем и пр.

#h(2em) Проект нацелен на разработку сервиса, который позволит пользователю управлять своей медиатекой на домашнем сервере (в облаке), а также прослушивать музыкальные произведения (файлы) с мобильных устройств.

#h(2em) В настоящее время не существует программной системы, позволяющей полноценно и эффективно решать указанные выше проблемы.

= ОСНОВАНИЯ ДЛЯ РАЗРАБОТКИ
== Документ(ы), на основании которого(ых) ведется разработка

#h(2em) Разработка ведётся на основании учебного плана подготовки бакалавров по направлению 09.03.04 «Программная инженерия» и утвержденной академическим руководителем программы темы курсового проекта.

== Наименование темы разработки

#h(2em) Наименование темы разработки: "Сервис для стриминга и селфхостинга музыки".\
#h(2em) Наименование темы разработки на
английском языке -- "Sеrviсе for Self-hosting апd Streaming Music"

= НАЗНАЧЕНИЕ РАЗРАБОТКИ
== Функциональное назначение

#h(2em) Разрабатываемая программа предназначена для удаленного хранения и упралвения музыкальной библиотекой. Продукт должен предоставлять следующие функции:\
\- Добавление композиций в библиотеку;\
\- Удаление композиций из библиотеки;\
\- Проигрывание композиции из хранилища;\
\- Создание плейлистов;\
\- Фильтрация композиций;\
\- Сортировка композиций по названиям, альбомам, исполнителям;\
\- Поиск по названию композиции, названию альбома, исполнителю;\

== Эксплуатационное назначение

#h(2em) Основными конечными потребителями разрабатываемого приложения являются люди,
которые предпочитают хранить музыку на своём устройстве, стремятся к безопасности и удобству прослушивания треков.

#h(2em) Для корректного использования программы пользователю необходим смартфон с
операционной системой iOS или Android и доступ к Интернету.

= ТРЕБОВАНИЯ К ПРОГРАММЕ
== Требования к функциональным характеристикам
=== Требования к составу выполняемых функций

#h(2em) Мобильные приложения для Android и iOS и web-клиент должны реализовывать следующие функции:

1. Управление музыкальными композициями\
#h(2em) 1.1. Добавление треков: Возможность загрузки аудиофайлов в библиотеку для дальнейшего использования.\
#h(2em) 1.2. Удаление треков: Легкое и быстрое удаление выбранных аудиозаписей из системы.

2. Воспроизведение музыки
#h(2em) 2.1. Стриминг: Онлайн-проигрывание треков с сервера, позволяющее слушать музыку без предварительной загрузки.\
#h(2em) 2.2. Оффлайн-проигрывание: Воспроизведение ранее загруженных треков в условиях отсутствия подключения к Интернету.\
#h(2em) 2.3. Смешивание треков: Функция случайного порядка воспроизведения для создания уникального музыкального опыта.\
#h(2em) 2.4. Восстановление очереди воспроизведения: Восстановление настроенной очереди после использования режима смешивания.\
#h(2em) 2.5. Управление очередью воспроизведения: Реализация манипулирования порядком треков, добавляя новые и удаляя уже существующие треки.

3. Поиск музыки
#h(2em) 3.1. Поиск музыки среди локальных и серверных треков:\
#h(4em) - Поиск по названию композиции;\
#h(4em) - Поиск по исполнителю;\

4. Управление плейлистами
#h(2em) 4.1. Создание плейлистов: Формирование подборок треков для персонального использования.\
#h(2em) 4.2. Удаление плейлистов: Возможность удаления устаревших или неактуальных плейлистов.\
#h(2em) 4.3. Удаление трека из плейлиста: Гибкое управление содержимым плейлистов с возможностью удаления отдельных композиций.

5. Навигация
#h(2em) 5.1. Интерактивная навигация по библиотеке: Удобное перемещение по разделам и коллекциям треков.\
#h(2em) 5.2. Тулбар (нижнее меню): Эффективная система переходов между основными разделами, такими как «Главный экран», «Поиск», «Профиль».\
#h(2em) 5.3. Автоматическое сохранение изменений: Система предотвращения потери данных при добавлении, удалении или редактировании аудиоконтента.

6. Настройки приложения
#h(2em) 6.1. Редактирование профиля пользователя: Позволяет пользователю изменять свои личные данные и настраивать учетную запись.\

7. Работа в режиме online
#h(2em) 7.1. Запрос и отображение данных: Вся информация о треках, исполнителях, плейлистах и статистике запрашивается и обновляется с сервера в режиме реального времени.\
#h(2em) 7.2. Синхронизация изменений: Все операции по созданию, редактированию и удалению контента передаются на сервер для обеспечения актуальности базы данных.

8. Работа в режиме offline
#h(2em) 8.1. Доступ к сохраненной информации: Пользователь может работать с данными о треках, исполнителях и плейлистах, сохраненными на устройстве.\
#h(2em) 8.2. Локальное хранение изменений: Изменения, касающиеся создания и редактирования плейлистов, сохраняются локально до момента восстановления соединения с Интернетом.\
#h(2em) 8.3. Фильтрация данных для оффлайн использования: Предоставление информации о загруженных на устройство аудиофайлах с выделением исполнителей, треков и плейлистов, доступных в оффлайн режиме.\
#h(2em) 8.4. Воспроизведение локальных треков: Обеспечение возможности слушать музыку, сохраненную непосредственно на устройстве пользователя.

9. Подключение к личному серверу по http-протоколу
#h(2em) 9.1. Авторизация пользователя: Реализация системы логина и пароля для безопасного подключения к серверу селфхостинга и стриминга.\
#h(2em) Данный функционал критически важен для обеспечения приватности и защиты данных пользователя, а также для корректного взаимодействия между клиентом и сервером.

#h(2em) Серверная часть программы должна реализовывать следующий функционал:\
1. Добавление новых композиций, с указанием названия, исполнителя и альбома\
2. Удаление композиций из хранилища\
3. Получение информации о композиции, также содержания композиции\
4. Создание/редактирование/удаление плейлистов\
5. Фильтрация и сортировка композиций/альбомов/плейлистов\
6. Поиск плейлистов/альбомов/композиций по исполнителю, названию\

=== Требования к организации входных данных

#h(2em)Входные данные для мобильного приложения и web-клиента представляют собой действия, совершаемые пользователем в приложении.

#h(2em) 1. Основное\
#h(4em) 1.1. Каждое действие пользователя должно быть обработано приложением в соответствии с его типом и контекстом использования.

#h(2em) 2. Нажатия на виртуальные кнопки\
#h(4em) 2.1. Приложение должно реагировать на нажатия пользователя на виртуальные кнопки, отображаемые на экране устройства.\
#h(4em) 2.2. Каждая кнопка должна иметь определенную функциональность, которая должна быть корректно реализована в соответствии с функциональными требованиями к приложению, описанными в пункте 4.1.1.

#h(2em) 3. Листание текста\
#h(4em) 3.1. Приложение должно поддерживать возможность листания текста на экране устройства, если это необходимо для просмотра больших объемов информации или элементов интерфейса, таких как списки или карточки.

#h(2em) 4. Ввод текста, чисел, добавление фотографий\
#h(4em) 4.1. Ввод текста и чисел (название трека, альбома, плейлиста, имя испольнителя) должен осуществляться с помощью виртуальной клавиатуры.\
#h(4em) 4.2. Добавление фотографий должно быть доступно из галереи устройства.

#h(2em) Входные данные для серверной части будут представлять собой HTTP-запросы с клиентской части.

=== Требования к организации выходных данных

#h(2em) Выходные данные предоставляются пользователю на экране мобильного приложения. Мобильное приложение получает данные от сервера в результате HTTP запросов и преобразует их для отображения пользователю.\
#h(2em) Выходные для серверной части -- это звуковая информация, передаваемая с применением RTP-протокола, а также ответы на HTTP-запросы принятые с клиента, которые будут использовать формат JSON.

=== Требования к временным характеристикам

#h(2em) Требования к временным характеристикам программы не предъявляются.

=== Требования к интерфейсу

#h(2em) Мобильное приложение для Android и iOS, а также web-клиент реализуют простой, понятный и эффективный интерфейс с пользователем. Интерфейс должен корректно отображаться на дисплеях смартфонов с любым разрешением
экрана.

#h(2em) 1. Интерфейс должен воспроизводить функционал из п. 4.1.1.

#h(2em) 2. Внизу каждой страницы расположена панель, на которой расположены кнопки для перехода в разделы "Главная", "Поиск", "Аккаунт"

#h(2em) 3. Окно авторизации и входа\
#h(4em) 3.1. Поле для ввода почты\
#h(4em) 3.2. Поле для ввода пароля\
#h(4em) 3.3. Кнопка "Войти"\
#h(4em) 3.4. Кнопка "Забыли пароль?". При переходе на нее:\
#h(6em) 3.4.1. Поле для ввода почты\
#h(6em) 3.4.2. Кнопка "Восстановить пароль"\
#h(4em) 3.5. Кнопка "Зарегистрироваться". При переходе на нее:\
#h(6em) 3.4.1. Поле для ввода почты\
#h(6em) 3.4.2. Поле для ввода пароля\
#h(6em) 3.4.3. Кнопка "Зарегистрироваться"\

#h(2em) 4. Раздел "Главная"\
#h(4em) 4.1. Кнопка перехода к разделу "Моя музыка"\
#h(4em) 4.2. Кнопка "Добавить музыку"\
#h(4em) 4.3. Кнопка "История"\
#h(4em) 4.4. Кнопка "Создать плейлист"\
#h(4em) 4.5. Список плейлистов пользователя

#h(2em) 5. Раздел "Моя музыка"\
#h(4em) 5.1. Список треков пользователя\

#h(2em) 6. Раздел "Профиль"\
#h(4em) 6.1. Информация о пользователе\
#h(4em) 6.2. Кнопка "Настройки"\
#h(4em) 6.3. Кнопка смены режима\
#h(4em) 6.4. Кнопка "Выйти"\

#h(2em) 7. Раздел "Настройки"\
#h(4em) 7.1. Поле для ввода логина\
#h(4em) 7.2. Поле для ввода пароля\
#h(4em) 7.3. Поле для ввода нового пароля\
#h(4em) 7.4. Поле для подтверждения нового пароля\
#h(4em) 7.5. Кнопка "Сохранить"\

#h(2em) 8. "Плеер" -- экран воспроизведения композиций\
#h(4em) 8.1. Кнопки "Предыдущий трек", "Остановить/продолжить трек", "Следующий трек"\
#h(4em) 8.2. Прогресс-бар, отображающий на каком моменте проигрывается композиция\
#h(4em) 8.3. Обложка композиции\
#h(4em) 8.4. Название трека и имя исполнителя\
#h(4em) 8.5. Кнопки для перемешивания очереди треков\
#h(4em) 8.6. Кнопка повторного воспроизведения текущей композиции\
#h(4em) 8.7. Кнопка перехода к очереди\
#h(4em) 8.8. Кнопка скрытия плеера

#h(2em) 9. Раздел "Исполнитель"\
#h(4em) 9.1. Фото исполнителя\
#h(4em) 9.2. Имя исполнителя\
#h(4em) 9.3. Треки исполнителя\

#h(2em) 10. Раздел "Поиск" (для поиска среди всех треков, загруженных на сервер)\
#h(4em) 10.1. Поисковая строка\
#h(4em) 10.2. Кнопка поиска\
#h(4em) 10.3. Результаты поиска\

#h(2em) 11. Экран плейлиста\
#h(4em) 11.1. Название плейлиста\
#h(4em) 11.2. Список треков плейлиста\

== Требования к надёжности

#h(2em) Приложение не должно аварийно завершаться при любом наборе входных данных. Программа не должна давать сбой при некорректных действиях пользователя.

== Условия эксплуатации
=== Климатические условия эксплуатации

#h(2em) Климатические условия эксплуатации, при которых должна обеспечиваться корректная работа программы, должны соответствовать требованиям, предъявляемым к техническим средствам, реализующим данный программный продукт.

=== Требования к видам обслуживания

#h(2em) На персональном смартфоне, где производится эксплуатация программы, необходимо обеспечить регулярные проверки оборудования и программного обеспечения на наличие сбоев и неполадок, а также обеспечить защиту персонального смартфона от вредоносного воздействия шпионских программ, троянских программ и других видов вредоносного программного обеспечения.

=== Требования к численности и квалификации персонала

#h(2em) Для пользования данным приложением достаточно одного человека. Пользователь должен обладать навыками пользования смартфоном с операционной системой iOS 14.0 и выше или смартфоном с операционной системой Android 8.1 (Oreo) и выше или браузер с поддержкой HTML5, иметь доступ к Интернету, уметь скачивать и устанавливать приложения.
Перед использованием программы он должен быть проинформирован о функционале программы.

== Требования к составу и параметрам технических средств

#h(2em) Для надежной и бесперебойной работы программы требуется следующий состав технических средств:
1. Мобильное устройство с возможностью использования операционной системы iOS 14.0 или выше / мобильное устройство с операционной системой Android 8.1 (Oreo) и выше / браузер с поддержкой HTML5;
2. 2 Гб оперативной памяти (ОЗУ) или больше;
3. 200 Мб свободного места на внутреннем накопителе или больше;
4. Возможность подключения к сети интернет;

== Требования к информационной и программной совместимости

=== Требования к информационным структурам и методам решения

#h(2em) Требования к информационным структурам и методам решения не предъявляются.

=== Требования к программным средствам, используемым программой

#h(2em) Для корректной работы программы на устройстве должна быть установлено одно из следующих:
- операционная система iOS 14.0 и выше;
- операционная система Android 8.1 (Oreo) и выше;
- Браузер с поддержкой HTML5.

=== Требования к исходным кодам и языкам программирования

#h(2em) Код программы мобильного приложения должны для платформы iOS должен быть реализован на языке Swift [14] с использованием фреймворка UIKit [15].

#h(2em) Исходный код программы мобильного приложения должны для платформы Android должен быть реализован на языке Kotlin [16].

#h(2em) Код программы web-клиента должен быть реализован на языке JavaScript/TypeScript [17] с использованием фреймворка Next.js [18] и библиотеки React [19].

#h(2em) Серверная часть должна быть реализована на языке Golang [20] с использованием web-фреймворка Gin [21].

=== Требования к защите информации и программы
#h(2em) Требования к защите информации и программ не предъявляются.

== Требования к маркировке и упаковке

#h(2em) Программа распространяется в виде электронного пакета, содержащего программную документацию, приложение (исполняемые файлы и прочие необходимые для работы файлы, в том числе файлы с исходным кодом) и презентацию проекта. Специальных требований к маркировке и упаковке не предъявляется.

== Требования к транспортированию и хранению

#h(2em) Транспортировка программного продукта должна осуществляться без нарушения полноты комплекта, предоставленного разработчиком изначально.\
#h(2em) Хранение продукта осуществляется с помощью репозитория на GitHub.

== Специальные требования

#h(2em) Специальные требования к программе не предъявляются.

= ТРЕБОВАНИЯ К ПРОГРАММНОЙ ДОКУМЕНТАЦИИ
== Состав программной документации

1. "Сервис для стриминга и селфхостинга музыки". Техническое задание (ГОСТ 19.201-78 [7]).
2. "Сервис для стриминга и селфхостинга музыки". Пояснительная записка (ГОСТ 19.404-79 [10]).
3. "Сервис для стриминга и селфхостинга музыки". Программа и методика испытаний (ГОСТ 19.301-79 [8]).
4. "Сервис для стриминга и селфхостинга музыки". Текст программы (ГОСТ 19.401-78 [9]).
5. "Сервис для стриминга и селфхостинга музыки". Руководство оператора (ГОСТ 19.505-79 [11]).

== Специальные требования к программной документации

#h(2em) Документы к программе должны быть выполнены в соответствии с ГОСТ 19.106-78 [6] и ГОСТами к каждому виду документа (см. п. 5.1.);

#h(2em) Пояснительная записка должна быть загружена в систему Антиплагиат через LMS «НИУ ВШЭ».

#h(2em) Документация и программа сдается в электронном виде в формате .pdf или .docx. в архиве формата;

#h(2em) За две недели до защиты комиссии все материалы курсового проекта:\
\- программная документация,\
\- программный проект,\
\- исполняемый файл,\
\- отзыв руководителя,\
\- отчет системы Антиплагиат\
должны быть загружены одним или несколькими архивами в проект дисциплины "Курсовой проект" в личном кабинете в информационной образовательной среде SmartLMS НИУ ВШЭ.

= ТЕХНИКО-ЭКОНОМИЧЕСКИЕ ПОКАЗАТЕЛИ
== Предполагаемая потребность

#h(2em) Есть ситуации, когда пользователю необходимо хранить и использовать музыкальные файлы в облаке. Если композиции были удалены с популярных стриминговых сервисов, а хранение музыки локально на устройстве неудобно или невозможно, то пользователь теряет возможность воспроизводить музыку.

#h(2em) Разрабатываемое приложение станет решением для тех, кто хочет сохранять доступ к своим музыкальным композициям и слушать их в любое время, независимо от ограничений стриминговых платформ.

== Целевая аудитория

#h(2em) Программа будет востребована среди людей, которые хотят хранить свою музыкальную библиотеку независимо от стриминговой платформы и иметь постоянный доступ к ней.

== Экономические преимущества разработки по сравнению с отечественными и зарубежными аналогами

#h(2em) Для оценки преимуществ проекта было проведено сравнение функциональных характеристик с аналогами разрабатываемого приложения (ссылки на аналоги даны в приложении "Ссылки на аналоги"). Рассмотрены только бесплатные версии аналогов без подписки. Данные сравнения отображены в таблице 1 и 2.

#let column_names = (
    [Яндекс Музыка],
    [Spotify],
    [ВК\ Музыка],
    [YouTube Music],
    [Apple Music],
    [*Our Project*],
)

#let plus = table.cell(
  fill: green.lighten(60%),
)[+]

#let minus = table.cell(
  fill: red.lighten(60%),
)[-]

#figure(
    caption: [Сравнение функциональных характеристик со стриминговыми сервисами],
    table(
        columns: (6cm,) + (2cm,) * column_names.len(),
        rows: (3cm, 1.5cm),
        align: center + horizon,
        table.header(
            [Функция],
            ..column_names.map(col => rotate(0deg, reflow: true, col))
        ),

        [Скачивание треков\ на устройство],   minus, 
        minus, minus, minus, minus, plus,
        [Нет рекламы], minus, minus, minus, minus, plus, plus,
        [Бесплатное прослушивание\ без ограничений], minus, minus, minus, minus, minus, plus,
        [Возможность использования в России], plus, minus, plus, minus, plus, plus,
        [Добавление своих треков], plus, minus, plus, minus, plus, plus,

        [*Итого*], [*2*], [*0*], [*2*], [*0*], [*3*], [*5*],
    )
)

#let column_names2 = (
    [Black Candy],
    [Navidrome],
    [Ampache],
    [mStream],
    [*Our Project*],
)

#figure(
    caption: [Сравнение функциональных характеристик с сервисами для селфхостинга музыки],
    table(
        columns: (6cm,) + (2cm,) * column_names2.len(),
        rows: (3cm, 1.5cm),
        align: center + horizon,
        table.header(
            [Функция],
            ..column_names2.map(col => rotate(0deg, reflow: true, col))
        ),

        [Удобный интерфейс],   minus, 
        plus, minus, minus, plus,
        [Кеширование], minus, plus, plus, minus, plus,
        [Поиск треков], minus, plus, plus, minus, plus,
        [Страницы артистов], minus, plus, plus, minus, plus,
        [Наличие приложения под iOS], minus, minus, minus, minus, plus,

        [*Итого*], [*0*], [*4*], [*3*], [*0*], [*5*],
    )
)

= СТАДИИ И ЭТАПЫ РАЗРАБОТКИ
== Стадии разработки, этапы и содержание работ

#h(2em) Стадии и этапы разработки были выявлены с учётом ГОСТ 19.102-77 [2].

#let column_names = (
    [*Стадия\ разработки*],
    [*Этап работ*],
    [*Содержание работ*],
    [*Сроки\ выполнения*],
)

Таблица 3 -- Стадии и этапы разработки

#figure(
    table(
        columns: (auto, auto, auto, auto),
        rows: (15mm, auto),
        
        align: center + horizon,
        table.header(..column_names),

        table.cell(
          rowspan: 10,
          align: horizon,
          rotate(0deg, reflow: true)[
            Техническое задание
          ],
        ),

        table.cell(
          rowspan: 2,
          align: horizon,
          rotate(0deg, reflow: true)[
            Обоснование необходимости разработки
          ],
        ),
        [Постановка задачи], [13.11.24],
        [Сбор исходных теоретических материалов], [13.11.24],

        table.cell(
          rowspan: 4,
          align: horizon,
          rotate(0deg, reflow: true)[
            Научно-исследовательский этап разработки
          ],
        ),
        [Определение\ структуры входных и выходных данных], [15.11.24 --\ 03.12.24],
        [Предварительный выбор методов решения задач], [15.11.24 --\ 03.12.24],
        [Определение требований к техническим и программным средствам], [15.11.24 --\ 03.12.24],
        [Обоснование возможности решения поставленной задачи], [15.11.24 --\ 03.12.24],

        table.cell(
          rowspan: 4,
          align: horizon,
          rotate(0deg, reflow: true)[
            Разработка и утверждение технического задания
          ],
        ),
        [Определение требований к программному продукту], [15.11.24 --\ 03.12.24],
        [Выбор языков программирования], [15.11.24 --\ 03.12.24],
        [Разработка и согласование технического задания с научным руководителем], [15.11.24 --\ 03.12.24],
        [Загрузка согласованного технического задания в SmartLMS], [04.12.24],
    )
)
\
\
Продолжение таблицы 3

#figure(
    table(
        columns: (auto, auto, auto, auto),
        rows: (15mm, auto),
        
        align: center + horizon,
        table.header(..column_names),

        table.cell(
          rowspan: 6,
          align: horizon,
          rotate(0deg, reflow: true)[
            Рабочий проект
          ],
        ),

        table.cell(
          rowspan: 2,
          align: horizon,
          rotate(0deg, reflow: true)[
            Разработка программы
          ],
        ),
        [Предварительная разработка структуры программы], [05.12.24 --\ 25.12.24],
        [Программирование и отладка программы], 
        [25.12.24 --\ 31.01.25],

        [Разработка программной документации],
        [Разработка документов в соответствии с требованиями ГОСТ 19 ЕСПД (Единой системы программной документации)], [05.12.24 --\ 31.01.25],

        table.cell(
          rowspan: 3,
          align: horizon,
          rotate(0deg, reflow: true)[
            Испытания программы
          ],
        ),

        [Разработка, согласование и утверждение порядка в методики испытаний], [01.02.25 --\ 10.02.25],
        [Проведение испытаний программы в соответствии с утвержденными порядком и методикой], [10.02.25 --\ 17.02.25],

        [Корректировка программы и программной документации по результатам испытаний], [17.02.25 --\ 28.02.25],

        table.cell(
          rowspan: 2,
          align: horizon,
          [Внедрение],
        ),

        table.cell(
          rowspan: 2,
          align: horizon,
          [Подготовка и передача программы],
        ),

        [Подготовка программы и программной документации для презентации и защиты], [01.03.25 --\ 15.03.25],

        [Представление разработанного программного продукта научному руководителю и получение отзыва], [16.03.25],
    )
)
\
\
\
\
Продолжение таблицы 3

#figure(
    table(
        columns: (3cm, 43.2mm, auto, auto),
        rows: (15mm, auto),
        
        align: center + horizon,
        table.header(..column_names),

        table.cell(
          rowspan: 3,
          align: horizon,
          [],
        ),

        table.cell(
          rowspan: 3,
          align: horizon,
          [],
        ),

        [Загрузка Пояснительной записки в систему Антиплагиат через ЛМС НИУ ВШЭ], [xx.04.25],

        [Загрузка материалов курсового проекта в ЛМС, дисциплина "Курсовой проект, 2 курс, ПИ"], [xx.04.25],
        
        [Защита программного продукта комиссии], [xx.04.25]
    )
)

== Сроки разработки и исполнители

#h(2em) Разработка программного продукта должна быть завершена не позже утверждённого срока сдачи работы.

#h(2em) Исполнители всех этапов:\
\- А. Р. Ахметьянов - студент группы БПИ234\
\- А. В. Васюков - студент группы БПИ235\
\- Д. Ф. Гареев - студент группы БПИ236\
\- М. Д. Панфилова - студент группы БПИ226\

= ПОРЯДОК КОНТРОЛЯ И ПРИЕМКИ

#h(2em) Контроль и приемка разработки осуществляются в соответствии с документом «Программа и методика испытаний» (ГОСТ 19.301–79 [8]).

== Виды испытаний

#h(2em) Производится проверка корректного выполнения программой заложенных в нее функций, т.е. осуществляется функциональное тестирование программы. Также осуществляется визуальная проверка интерфейса программы на соответствие пункту 4.1.5 настоящего технического задания.\
#h(2em) Сроки проведения испытаний указаны в пункте 7 "Стадии и этапы разработки".

== Общие требования к приёмке работы

#h(2em) Прием программы будет утвержден при корректной работе программы в соответствии с пунктом 4.1.1 при различных входных данных, соответствующих условиям в пункте 4.1.2 данного документа и при предоставлении полной документации к продукту, указанной в пункте 5.1, выполненной в соответствии с требованиями, указанными в пункте 5.2 данного технического задания.

#set heading(numbering: none)
= СПИСОК ИСПОЛЬЗУЕМОЙ ЛИТЕРАТУРЫ

1. ГОСТ 19.101-77: Виды программ и программных документов. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
2. ГОСТ 19.102-77: Стадии разработки. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
3. ГОСТ 19.103-77: Обозначения программ и программных документов. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
4. ГОСТ 19.104-78: Основные надписи. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
5. ГОСТ 19.105-78: Общие требования к программным документам. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
6. ГОСТ 19.106-78: Требования к программным документам, выполненным печатным способом. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
7. ГОСТ 19.201-78: Техническое задание. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
8. ГОСТ 19.301-79: Программа и методика испытаний. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
9. ГОСТ 19.401-78: Текст программы. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
10. ГОСТ 19.404-79: Пояснительная записка. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
11. ГОСТ 19.505-79: Руководство оператора. Требования к содержанию и оформлению. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
12. ГОСТ 19.603-78: Общие правила внесения изменений. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
13. ГОСТ 19.604-78: Правила внесения изменений в программные документы, выполненные печатным способом. \// Единая система программной документации. – М.: ИПК Издательство стандартов, 2001.
14. Официальная документация Swift. Электронный ресурс. URL: https://www.swift.org/documentation/ (дата обращения 30.11.24)
15. Официальная документация UIKit. Электронный ресурс. URL: https://developer.apple.com/documentation/uikit/ (дата обращения 30.11.24)
16. Официальная документация Kotlin. Электронный ресурс. URL: https://kotlinlang.org/docs/home.html (дата обращения 03.12.24)
17. Официальная документация JavaScript. Электронный ресурс. URL: https://developer.mozilla.org/ru/docs/Web/JavaScript (дата обращения 03.12.24)
18. Официальная документация JavaScript. Электронный ресурс. URL: https://nextjs.org/docs (дата обращения 03.12.24)
19. Официальная документация JavaScript. Электронный ресурс. URL: https://react.dev/ (дата обращения 03.12.24)
20. Официальная документация Golang. Электронный ресурс. URL: https://go.dev/doc/ (дата обращения 03.12.24)
21. Официальная документация Gin. Электронный ресурс. URL: https://gin-gonic.com/docs/ (дата обращения 03.12.24)

= ПРИЛОЖЕНИЕ. ССЫЛКИ НА АНАЛОГИ

#figure(
  table(
    columns: (70mm, 70mm),
    rows: (10mm, auto),
    align: center + horizon,
    table.header([*Приложение*], [*Ссылка*]),

    [Яндекс Музыка], [https://music.yandex.ru/],
    [Spotify], [https://www.spotify.com/],
    [ВК Музыка], [https://music.vk.com/],
    [YouTube Music], [https://music.youtube.com/],
    [Apple Music], [https://music.apple.com/],
    [Black Candy], [https://github.com/blackcandy-org/blackcandy],
    [Navidrome], [https://www.navidrome.org/],
    [Ampache], [https://ampache.org/],
    [mStream], [https://mstream.io/],
  )
)

#h(2em) Дата обращения: 03.12.24.
