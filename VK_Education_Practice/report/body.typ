= ЦЕЛЬ И ЗАДАЧИ ПРАКТИКИ

== Цель

#h(2em) Целью практики является освоение и закрепление знаний по классическим алгоритмам машинного обучения (линейные и метрические модели, деревья решений, ансамблевые методы, рекомендательные системы), а также разработка модели машинного обучения для предсказания пола пользователей социальных сетей с последующим применением результатов в задачах персонализированной рекламы.

== Задачи

1. Изучить теоретический материал и лекции по классическим алгоритмам машинного обучения: линейные и метрические модели, деревья решений, ансамблевые методы, рекомендательные системы.

2. Выполнить практические задания к лекционным материалам для закрепления знаний.

3. Провести анализ исходных данных: исследование структуры, выявление особенностей и подготовка признаков.

4. Выполнить предобработку и очистку данных для корректного обучения моделей.

5. Разработать и обучить модель машинного обучения для предсказания пола пользователей социальных сетей.

6. Оценить качество модели с использованием соответствующих метрик.

7. Подготовить отчет о проделанной работе, включающий описание этапов разработки, результаты экспериментов и выводы.

= ОПИСАНИЕ МЕСТА ПРОХОЖДЕНИЯ ПРАКТИКИ

#h(2em) Практика проходила в компании VK [1] в рамках программы VK Education Practice [2]. VK -- одна из крупнейших российских IT-компаний, объединяющая социальные сети, сервисы коммуникации, развлечений, образования и облачные платформы. Компания активно развивает направления, связанные с машинным обучением, анализом данных и созданием высоконагруженных систем.

#h(2em) Программа VK Education Practice представляет собой масштабную онлайн-практику, разработанную совместно с ведущими университетами. Ее цель -- дать студентам опыт работы с современными технологиями в условиях, приближенных к реальным индустриальным задачам.

#h(2em) Структура программы включает:
- лекции по машинному обучению;
- практические задания на основе реальных данных;
- проектную работу по разработке и обучению моделей;
- консультации и обратную связь от экспертов VK.

= ОБЗОР ИЗУЧЕННЫХ МАТЕРИАЛОВ, ТЕХНОЛОГИЙ И МЕТОДОВ

#h(2em) В процессе практики был проведен обзор теоретических основ и практических методов машинного обучения, необходимых для решения задачи предсказания пола пользователей социальных сетей. Особое внимание уделялось не только изучению алгоритмов и моделей, но и инструментам анализа данных, их предобработки и визуализации, а также современным библиотекам и подходам, применяемым в индустрии.

== Классические методы машинного обучения

- Задачи классификации и регрессии.
- Алгоритмы: метод k-ближайших соседей, наивный байесовский классификатор, решающие деревья, логистическая регрессия.
- Методы оптимизации: градиентный спуск.
- Метрики качества: точность, полнота, F1-мера и другие показатели оценки моделей.
- Методы работы с признаками: извлечение и преобразование данных, обработка пропусков, отбор признаков.

== Продвинутые методы и ансамбли моделей

- Ансамблирование: бэггинг, бустинг, стекинг.
- Случайный лес, градиентный бустинг (CatBoost, XGBoost).
- Методы кластеризации: k-means, иерархическая и спектральная кластеризация, оценка качества кластеризации.
- Понижение размерности, выбор оптимальных гиперпараметров.
- Поиск ассоциативных правил.

== Обработка текстов (NLP)

- Специфика текстовых данных, методы предобработки и ручного извлечения признаков.
- Использование эмбеддингов слов, векторное представление текстов.
- Применение NLP в реальных задачах (классификация и анализ текстовой информации).

== Геоаналитика

- Основы работы с пространственными данными и их проекциями.
- Использование GeoPandas, OSM, OSMnx, QGIS для анализа геоданных.
- Методы пространственного объединения (spatial joins).

== Рекомендательные системы

- Основные подходы: item-to-item, методы на основе совстречаемости, неперсонализированные и персонализированные рекомендации.
- Коллаборативная фильтрация и матричная факторизация.
- Метрики оценки качества рекомендательных систем.

== Методы анализа поведения пользователей

- CRM и CVM-модели.
- Методы расчета CLTV (Customer Lifetime Value).
- Look-alike модели, response-моделирование, uplift-модели.
- Подходы к контролю качества данных и мониторингу работы моделей.

== Технологии и инструменты

#h(2em) В процессе практики активно использовались библиотеки Python [3] для анализа и визуализации данных: pandas [4], NumPy [5], Matplotlib [6], Seaborn [7]. Для обработки данных применялись json и datetime. Для машинного обучения использовались scikit-learn [8], CatBoost [9], XGBoost [10]. Разработка велась в Jupyter Notebook с использованием системы контроля версий Git.

= ОПИСАНИЕ МЕТОДОВ, ТЕХНОЛОГИЙ И СРЕДСТВ РАЗРАБОТКИ, ИСПОЛЬЗОВАННЫХ ДЛЯ РЕШЕНИЯ ПОСТАВЛЕННЫХ ЗАДАЧ

#h(2em) Для реализации проекта по предсказанию пола пользователей социальных сетей был применен комплекс методов машинного обучения и инструментов анализа данных, обеспечивший решение задачи в соответствии с целями практики. Работа строилась поэтапно и включала исследование данных, их подготовку, разработку и обучение моделей, а также оценку качества полученных решений.

== Методы машинного обучения

- Ключевыми методами стали алгоритмы классификации, что было обусловлено бинарным характером целевой переменной (мужской/женский пол).
- Логистическая регрессия была выбрана как базовая модель, позволяющая получить интерпретируемое решение и выступающая в качестве контрольной точки для последующего сравнения.
- Решающие деревья и случайный лес использовались для выявления нелинейных закономерностей и учета взаимодействий между признаками.
- Ансамблевые методы (бэггинг, градиентный бустинг) применялись с целью повышения устойчивости и точности предсказаний за счет объединения нескольких слабых моделей в сильную.
- Для настройки качества применялся подбор гиперпараметров (GridSearchCV, RandomizedSearchCV), что обеспечивало выбор оптимальных параметров моделей и предотвращало переобучение.

#h(2em) Таким образом, выбор конкретных алгоритмов был продиктован необходимостью как исследовать базовые интерпретируемые модели, так и протестировать более сложные ансамблевые подходы, широко используемые в индустрии.

== Методы обработки данных

#h(2em) Для корректной работы алгоритмов была проведена всесторонняя предобработка:

- Разведочный анализ данных (EDA) позволил выявить распределения признаков, наличие выбросов и пропусков.
- Обработка пропусков выполнялась с учетом природы признаков (заполнение модой, медианой или специальными категориями).
- Кодирование категориальных переменных (One-Hot Encoding, Label Encoding) обеспечивало их преобразование в числовую форму.
- Масштабирование признаков применялось для корректной работы алгоритмов, чувствительных к масштабу (например, логистическая регрессия, k-NN).
- Инженерия признаков включала извлечение новых характеристик из исходных данных, что повышало информативность признакового пространства.

== Технологии и инструменты разработки

- Основным языком разработки выступал Python, предоставляющий широкий спектр библиотек для анализа и моделирования данных.
- Для анализа и обработки данных использовались pandas и NumPy, которые являются основными и самыми популярными для данной работы.
- Для визуализации результатов применялись Matplotlib и Seaborn, что позволяло наглядно интерпретировать распределения, корреляции и метрики качества.
- Библиотека scikit-learn обеспечила реализацию базовых алгоритмов машинного обучения и метрик оценки (accuracy, precision, recall, F1).
- Для ансамблей применялись специализированные библиотеки CatBoost и XGBoost, предоставляющие эффективные реализации градиентного бустинга.
- Эксперименты проводились в среде Jupyter Notebook, что способствовало документированию кода и промежуточных результатов.
- Для контроля версий и организации работы над проектом использовались Git и GitHub.

== Организация процесса работы

#h(2em) Разработка велась итеративно:

#h(2em) 1. Первичный анализ данных и выявление особенностей датасета.\
#h(2em) 2. Предобработка и формирование признакового пространства.\
#h(2em) 3. Обучение базовых моделей (логистическая регрессия, решающее дерево) и получение контрольных результатов.\
#h(2em) 4. Построение ансамблевых моделей и их сравнение с базовыми по метрикам качества.\
#h(2em) 5. Подбор гиперпараметров и оптимизация финальной модели.\
#h(2em) 6. Систематизация результатов и формирование выводов о применимости методов.

#h(2em) Таким образом, использованные методы и технологии обеспечили комплексное решение задачи классификации, продемонстрировав практическую значимость изученных алгоритмов и инструментов.

= ОПИСАНИЕ ПОЛУЧЕННЫХ РЕЗУЛЬТАТОВ

#h(2em) В рамках практики была разработана и обучена модель машинного обучения для предсказания пола пользователей социальных сетей.

== Предобработка данных

#h(2em) Был создан единый датасет пользователей, включающий геолокацию, страну, регион, часовой пояс, рекламные запросы и параметры устройств.

#h(2em) Из признаков были извлечены дополнительные характеристики:\
#h(2em) - domain -- домен сайта из запроса referer;\
#h(2em) - hour -- час запроса из request_ts;\
#h(2em) - browser, os -- тип браузера и операционной системы;

#h(2em) Пропуски в region_id заполнялись значением country_id, остальные пропуски -- значением none.

#h(2em) Данные агрегировались по пользователям с использованием статистик частоты и среднего значения для признаков.

== Обучение модели

#h(2em) Данные были разделены на тренировочную, валидационную и тестовую выборку в пропорции 8:1:1.

#h(2em) Для числовых признаков применялся StandardScaler, категориальные признаки обрабатывались с помощью Pool библиотеки CatBoost.

#h(2em) Настройка CatBoostClassifier:\
#h(4em) iterations=1500,\
#h(4em) early_stopping_rounds=15,\
#h(4em) auto_class_weights='Balanced',\
#h(4em) random_seed=42,\
#h(4em) verbose=100.

#h(2em) Также проводились эксперименты с логистической регрессией и XGBoost, однако наилучший результат показал CatBoost.

== Результаты оценки модели

#figure(
  table(
    columns: (40mm, 40mm, 40mm, 40mm),
    rows: (10mm, auto),
    align: center + horizon,
    table.header([*Data*], [*AUC-ROC*], [*Accuracy*], [*F1-score*]),

    [*Train*], [0.9030], [0.9033], [0.8985],
    [*Test*], [0.8760], [0.8762], [0.8704]
  )
)

#h(2em) На тестовых данных модель достигла Accuracy = 87.6%, ROC-AUC = 87.6%, F1-score = 87%, что свидетельствует о высокой точности и сбалансированности предсказаний.

== Дополнительные эксперименты:

#h(2em) Были протестированы новые признаки: синусно-косинусное преобразование времени, день недели запроса, OneHotEncoding для browser и os.

#h(2em) Эксперименты с альтернативными моделями (логистическая регрессия, XGBoost) не привели к улучшению качества.

== Выводы

#h(2em) Наиболее эффективной моделью для задачи классификации пола пользователей является CatBoost с настроенными параметрами.

#h(2em) Предобработка данных и инженерия признаков оказались критически важными для повышения качества модели.

= ЗАКЛЮЧЕНИЕ

#h(2em) В ходе прохождения практики в компании VK успешно были выполнены все поставленные задачи и достигнуты цели.

#h(2em) Был освоен теоретический и практический опыт работы с алгоритмами машинного обучения, включая логистическую регрессию, решающие деревья и градиентный бустинг, а также с современными инструментами анализа данных и визуализации.

#h(2em) В рамках проекта была разработана и обучена модель для предсказания пола пользователей социальных сетей, которая показала высокие показатели точности на тестовой выборке в 87%.

#h(2em) Практика позволила закрепить теоретические знания и приобрести навыки работы с реальными данными, что может быть использовано в дальнейшем для курсовых и дипломных работ, а также в профессиональной деятельности в области машинного обучения и анализа данных.

#set heading(numbering: none)
= СПИСОК ИСПОЛЬЗУЕМОЙ ЛИТЕРАТУРЫ

1. Официальный сайт VK. Электронный ресурс. URL: https://vk.com/ (дата обращения 23.08.25)
2. Официальный сайт VK Education Practice. Электронный ресурс. URL: https://education.vk.company/program/vk_education_practice (дата обращения 23.08.25)
3. Официальная документация Python. Электронный ресурс. URL: https://docs.python.org/3/ (дата обращения 23.08.25)
4. Официальная документация pandas. Электронный ресурс. URL: https://pandas.pydata.org/docs/ (дата обращения 23.08.25)
5. Официальная документация NumPy. Электронный ресурс. URL: https://numpy.org/doc/ (дата обращения 23.08.25)
6. Официальная документация Matplotlib. Электронный ресурс. URL: https://matplotlib.org/stable/index.html (дата обращения 23.08.25)
7. Официальная документация Seaborn. Электронный ресурс. URL: https://seaborn.pydata.org/ (дата обращения 23.08.25)
8. Официальная документация scikit-learn. Электронный ресурс. URL: https://scikit-learn.org/stable/ (дата обращения 23.08.25)
9. Официальная документация Catboost. Электронный ресурс. URL: https://catboost.ai/docs/en/ (дата обращения 23.08.25)
10. Официальная документация XGBoost. Электронный ресурс. URL: https://xgboost.readthedocs.io/en/stable/ (дата обращения 23.08.25)

= ПРИЛОЖЕНИЕ

#h(2em) Рабочий план-график прохождения практики с отметками о выполнении:

#figure(
  table(
    columns: (10mm, 40mm, 60mm, 50mm),
    rows: (12mm, auto),
    align: center + horizon,
    table.header([*№ п/п*], [*Сроки проведения*], [*Планируемые работы*], [*Отметка о выполнении*]),

    [1], [01.08.25], [Ознакомление с VK Education Practice], [+],
    [2], [01.08.25], [Выбор теоретического курса и проектной задачи], [+],
    [3], [01.08.25 -- 13.08.25], [Просмотр лекций], [+],
    [4], [01.08.25 -- 13.08.25], [Изучение теоретического материала], [+],
    [5], [08.08.25 -- 13.08.25], [Выполнение практической задачи], [+],
    [6], [14.08.25], [Ознакомление с обратной связи от экспертов по проделанной работе], [+]
  )
)